{
  "info": {
    "name": "Budgetter API - Complete Collection (No Auth)",
    "description": "Comprehensive API collection for Budgetter budget management app with all 6 tables - Authentication temporarily disabled for testing",
    "version": "2.1.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "noauth"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:5000",
      "type": "string"
    },
    {
      "key": "access_token",
      "value": "NOT_REQUIRED_FOR_TESTING",
      "type": "string",
      "description": "Authentication temporarily disabled - no token needed"
    }
  ],
  "item": [
    {
        "name": "Health",
        "item": [
          {
            "name": "Healthcheck",
            "request": {
              "method": "GET",
              "header": [],
              "url": {
                "raw": "{{base_url}}/api/health/",
                "host": ["{{base_url}}"],
                "path": ["api", "health", ""]
              }
            },
            "response": [
              {
                "name": "Success Response",
                "status": "OK",
                "code": 200,
                "_postman_previewlanguage": "json",
                "body": "{\n  \"status\": \"ok\",\n  \"database\": \"ok\",\n  \"message\": \"Budgetter backend is healthy.\"\n}"
              }
            ]
          }
        ]
      },
    {
      "name": "üîê Authentication (Temporarily Disabled)",
      "description": "‚ö†Ô∏è Authentication is temporarily disabled for testing. All endpoints work without Bearer tokens.",
      "item": [
        {
          "name": "Register User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"password123\",\n  \"first_name\": \"John\",\n  \"last_name\": \"Doe\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/register",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "register"]
            }
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"password123\",\n  \"first_name\": \"John\",\n  \"last_name\": \"Doe\"\n}"
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "body": "{\n  \"success\": true,\n  \"message\": \"User registered successfully\",\n  \"data\": {\n    \"user\": {\n      \"id\": 1,\n      \"email\": \"john.doe@example.com\",\n      \"first_name\": \"John\",\n      \"last_name\": \"Doe\"\n    },\n    \"access_token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\",\n    \"refresh_token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Login User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/login",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Authentication temporarily disabled - no token extraction needed",
                  "if (pm.response.code === 200) {",
                  "    console.log('Login successful - but authentication is disabled for testing');",
                  "    console.log('Response:', pm.response.json());",
                  "}"
                ]
              }
            }
          ],
          "response": [
            {
              "name": "Success Response",
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "body": "{\n  \"success\": true,\n  \"message\": \"Login successful\",\n  \"data\": {\n    \"user\": {\n      \"id\": 1,\n      \"email\": \"john.doe@example.com\",\n      \"first_name\": \"John\",\n      \"last_name\": \"Doe\"\n    },\n    \"access_token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\",\n    \"refresh_token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Get Current User",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/auth/me",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "me"]
            }
          }
        },
        {
          "name": "Refresh Token",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/auth/refresh",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "refresh"]
            }
          }
        }
      ]
    },
    {
      "name": "üë§ Users",
      "item": [
        {
          "name": "Get Profile",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/users/profile",
              "host": ["{{base_url}}"],
              "path": ["api", "users", "profile"]
            }
          }
        },
        {
          "name": "Update Profile",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"first_name\": \"Jane\",\n  \"last_name\": \"Smith\",\n  \"email\": \"jane.smith@example.com\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/users/profile",
              "host": ["{{base_url}}"],
              "path": ["api", "users", "profile"]
            }
          }
        },
        {
          "name": "Change Password",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"current_password\": \"password123\",\n  \"new_password\": \"newpassword456\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/users/change-password",
              "host": ["{{base_url}}"],
              "path": ["api", "users", "change-password"]
            }
          }
        },
        {
          "name": "Delete Account",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/users/delete-account",
              "host": ["{{base_url}}"],
              "path": ["api", "users", "delete-account"]
            }
          }
        }
      ]
    },
    {
      "name": "üìÇ Categories",
      "item": [
        {
          "name": "Get All Categories (Tree)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/categories/",
              "host": ["{{base_url}}"],
              "path": ["api", "categories", ""]
            }
          },
          "response": [
            {
              "name": "Success Response",
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "body": "{\n  \"success\": true,\n  \"message\": \"Success\",\n  \"data\": {\n    \"categories\": [\n      {\n        \"id\": 1,\n        \"name\": \"Foods & Drinks\",\n        \"parent_id\": null,\n        \"children\": [\n          {\n            \"id\": 12,\n            \"name\": \"Fast Food\",\n            \"parent_id\": 1\n          },\n          {\n            \"id\": 13,\n            \"name\": \"Groceries\",\n            \"parent_id\": 1\n          }\n        ]\n      }\n    ],\n    \"total\": 25\n  }\n}"
            }
          ]
        },
        {
          "name": "Get Categories (Flat List)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/categories/flat",
              "host": ["{{base_url}}"],
              "path": ["api", "categories", "flat"]
            }
          }
        },
        {
          "name": "Create Category",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Coffee Shops\",\n  \"parent_id\": 1\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/categories/",
              "host": ["{{base_url}}"],
              "path": ["api", "categories", ""]
            }
          }
        },
        {
          "name": "Update Category",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Category Name\",\n  \"parent_id\": 2\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/categories/12",
              "host": ["{{base_url}}"],
              "path": ["api", "categories", "12"]
            }
          }
        },
        {
          "name": "Delete Category",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/categories/12",
              "host": ["{{base_url}}"],
              "path": ["api", "categories", "12"]
            }
          }
        }
      ]
    },
    {
      "name": "üí∞ Transactions",
      "item": [
        {
          "name": "Get Transactions (Paginated)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/transactions/?page=1&per_page=10&type=expense&category_id=1",
              "host": ["{{base_url}}"],
              "path": ["api", "transactions", ""],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "per_page",
                  "value": "10"
                },
                {
                  "key": "type",
                  "value": "expense"
                },
                {
                  "key": "category_id",
                  "value": "1"
                }
              ]
            }
          },
          "response": [
            {
              "name": "Success Response",
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "body": "{\n  \"success\": true,\n  \"message\": \"Success\",\n  \"data\": {\n    \"transactions\": [\n      {\n        \"id\": 1,\n        \"amount\": 25.50,\n        \"type\": \"expense\",\n        \"category_id\": 1,\n        \"category_name\": \"Foods & Drinks\",\n        \"date\": \"2025-01-06\",\n        \"note\": \"Lunch at restaurant\",\n        \"created_at\": \"2025-01-06T10:30:00\"\n      }\n    ],\n    \"pagination\": {\n      \"total\": 45,\n      \"pages\": 5,\n      \"current_page\": 1,\n      \"per_page\": 10,\n      \"has_next\": true,\n      \"has_prev\": false\n    }\n  }\n}"
            }
          ]
        },
        {
          "name": "Create Transaction",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"amount\": 75.25,\n  \"type\": \"expense\",\n  \"category_id\": 1,\n  \"date\": \"2025-01-06\",\n  \"note\": \"Grocery shopping at Walmart\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/transactions/",
              "host": ["{{base_url}}"],
              "path": ["api", "transactions", ""]
            }
          }
        },
        {
          "name": "Create Income Transaction",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"amount\": 2500.00,\n  \"type\": \"income\",\n  \"category_id\": 10,\n  \"date\": \"2025-01-01\",\n  \"note\": \"Monthly salary\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/transactions/",
              "host": ["{{base_url}}"],
              "path": ["api", "transactions", ""]
            }
          }
        },
        {
          "name": "Update Transaction",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"amount\": 80.00,\n  \"note\": \"Updated: Grocery shopping at Target\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/transactions/1",
              "host": ["{{base_url}}"],
              "path": ["api", "transactions", "1"]
            }
          }
        },
        {
          "name": "Delete Transaction",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/transactions/1",
              "host": ["{{base_url}}"],
              "path": ["api", "transactions", "1"]
            }
          }
        },
        {
          "name": "Get Transaction Summary",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/transactions/summary?start_date=2025-01-01&end_date=2025-01-31",
              "host": ["{{base_url}}"],
              "path": ["api", "transactions", "summary"],
              "query": [
                {
                  "key": "start_date",
                  "value": "2025-01-01"
                },
                {
                  "key": "end_date",
                  "value": "2025-01-31"
                }
              ]
            }
          },
          "response": [
            {
              "name": "Success Response",
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "body": "{\n  \"success\": true,\n  \"message\": \"Success\",\n  \"data\": {\n    \"summary\": {\n      \"total_income\": 2500.00,\n      \"total_expenses\": 1250.75,\n      \"net_amount\": 1249.25,\n      \"transaction_count\": 15\n    },\n    \"category_breakdown\": {\n      \"Foods & Drinks\": {\n        \"income\": 0,\n        \"expense\": 350.50\n      },\n      \"Transport\": {\n        \"income\": 0,\n        \"expense\": 120.25\n      }\n    }\n  }\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "üí≥ Budgets",
      "item": [
        {
          "name": "Get All Budgets",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/budgets/",
              "host": ["{{base_url}}"],
              "path": ["api", "budgets", ""]
            }
          },
          "response": [
            {
              "name": "Success Response",
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "body": "{\n  \"success\": true,\n  \"message\": \"Success\",\n  \"data\": {\n    \"budgets\": [\n      {\n        \"id\": 1,\n        \"category_id\": 1,\n        \"category_name\": \"Foods & Drinks\",\n        \"amount_limit\": 500.00,\n        \"period\": \"monthly\",\n        \"start_date\": \"2025-01-01\",\n        \"end_date\": \"2025-01-31\",\n        \"created_at\": \"2025-01-06T10:00:00\"\n      }\n    ],\n    \"total\": 3\n  }\n}"
            }
          ]
        },
        {
          "name": "Create Monthly Budget",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"category_id\": 1,\n  \"amount_limit\": 500.00,\n  \"period\": \"monthly\",\n  \"start_date\": \"2025-01-01\",\n  \"end_date\": \"2025-01-31\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/budgets/",
              "host": ["{{base_url}}"],
              "path": ["api", "budgets", ""]
            }
          }
        },
        {
          "name": "Create Yearly Budget",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"category_id\": 4,\n  \"amount_limit\": 2000.00,\n  \"period\": \"yearly\",\n  \"start_date\": \"2025-01-01\",\n  \"end_date\": \"2025-12-31\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/budgets/",
              "host": ["{{base_url}}"],
              "path": ["api", "budgets", ""]
            }
          }
        }
      ]
    },
    {
      "name": "üéØ Goals",
      "item": [
        {
          "name": "Get All Goals",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/goals/",
              "host": ["{{base_url}}"],
              "path": ["api", "goals", ""]
            }
          },
          "response": [
            {
              "name": "Success Response",
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "body": "{\n  \"success\": true,\n  \"message\": \"Success\",\n  \"data\": {\n    \"goals\": [\n      {\n        \"id\": 1,\n        \"title\": \"Emergency Fund\",\n        \"target_amount\": 5000.00,\n        \"current_amount\": 1500.00,\n        \"progress_percentage\": 30.00,\n        \"target_date\": \"2025-12-31\",\n        \"status\": \"active\",\n        \"created_at\": \"2025-01-01T00:00:00\"\n      }\n    ],\n    \"total\": 2\n  }\n}"
            }
          ]
        },
        {
          "name": "Create Goal",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Emergency Fund\",\n  \"target_amount\": 5000.00,\n  \"current_amount\": 1000.00,\n  \"target_date\": \"2025-12-31\",\n  \"status\": \"active\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/goals/",
              "host": ["{{base_url}}"],
              "path": ["api", "goals", ""]
            }
          }
        },
        {
          "name": "Create Vacation Goal",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Summer Vacation\",\n  \"target_amount\": 3000.00,\n  \"current_amount\": 500.00,\n  \"target_date\": \"2025-07-01\",\n  \"status\": \"active\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/goals/",
              "host": ["{{base_url}}"],
              "path": ["api", "goals", ""]
            }
          }
        }
      ]
    },
    {
      "name": "üîÑ Recurring Transactions",
      "item": [
        {
          "name": "Get All Recurring Transactions",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/recurring-transactions/",
              "host": ["{{base_url}}"],
              "path": ["api", "recurring-transactions", ""]
            }
          },
          "response": [
            {
              "name": "Success Response",
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "body": "{\n  \"success\": true,\n  \"message\": \"Success\",\n  \"data\": {\n    \"recurring_transactions\": [\n      {\n        \"id\": 1,\n        \"category_id\": 10,\n        \"category_name\": \"Income\",\n        \"amount\": 2500.00,\n        \"type\": \"income\",\n        \"frequency\": \"monthly\",\n        \"next_due_date\": \"2025-02-01\",\n        \"is_active\": true,\n        \"description\": \"Monthly salary\",\n        \"created_at\": \"2025-01-01T00:00:00\"\n      }\n    ],\n    \"total\": 4\n  }\n}"
            }
          ]
        },
        {
          "name": "Create Monthly Salary",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"category_id\": 10,\n  \"amount\": 2500.00,\n  \"type\": \"income\",\n  \"frequency\": \"monthly\",\n  \"next_due_date\": \"2025-02-01\",\n  \"is_active\": true,\n  \"description\": \"Monthly salary from ABC Corp\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/recurring-transactions/",
              "host": ["{{base_url}}"],
              "path": ["api", "recurring-transactions", ""]
            }
          }
        },
        {
          "name": "Create Monthly Rent",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"category_id\": 3,\n  \"amount\": 1200.00,\n  \"type\": \"expense\",\n  \"frequency\": \"monthly\",\n  \"next_due_date\": \"2025-02-01\",\n  \"is_active\": true,\n  \"description\": \"Monthly rent payment\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/recurring-transactions/",
              "host": ["{{base_url}}"],
              "path": ["api", "recurring-transactions", ""]
            }
          }
        },
        {
          "name": "Create Weekly Coffee",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"category_id\": 1,\n  \"amount\": 25.00,\n  \"type\": \"expense\",\n  \"frequency\": \"weekly\",\n  \"next_due_date\": \"2025-01-13\",\n  \"is_active\": true,\n  \"description\": \"Weekly coffee subscription\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/recurring-transactions/",
              "host": ["{{base_url}}"],
              "path": ["api", "recurring-transactions", ""]
            }
          }
        }
      ]
    },
    {
      "name": "üè† Home & Test",
      "item": [
        {
          "name": "API Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/",
              "host": ["{{base_url}}"],
              "path": [""]
            }
          },
          "response": [
            {
              "name": "Success Response",
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "body": "{\n  \"message\": \"Budgetter API v1.0\",\n  \"status\": \"active\"\n}"
            }
          ]
        },
        {
          "name": "Swagger Documentation",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/apidocs",
              "host": ["{{base_url}}"],
              "path": ["apidocs"]
            }
          }
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Auto-set base URL if not set",
          "if (!pm.collectionVariables.get('base_url')) {",
          "    pm.collectionVariables.set('base_url', 'http://localhost:5000');",
          "}",
          "",
          "// Authentication Status Notice",
          "console.log('üîì AUTHENTICATION TEMPORARILY DISABLED');",
          "console.log('All endpoints work without Bearer tokens for testing purposes.');",
          "console.log('Default user_id = 1 is used for all authenticated operations.');"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Log response for debugging",
          "if (pm.response.code >= 400) {",
          "    console.log('Error Response:', pm.response.text());",
          "}"
        ]
      }
    }
  ]
}
